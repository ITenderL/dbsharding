server:
  port: 56081
  servlet:
    context-path: /sharding-jdbc-simple-demo
spring:
  application:
    name: sharding-jdbc-simple-demo
  http:
    encoding:
      enabled: true
      charset: utf-8
      force: true
  main:
    allow-bean-definition-overriding: true
  # 以下是分片规则配置
  # 定义数据源
  shardingsphere:
    datasource:
      names: m1
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order_db?useUnicode=true
        username: root
        password: root
    # 指定t_order表的数据分布情况，配置数据节点
    sharding:
      tables:
        t_order:
          actualDataNodes: m1.t_order_$->{1..2}
          # 指定t_order表的分片策略，分片策略包括分片键和分片算法
          tableStrategy:
            inline:
              shardingColumn: order_id
              algorithmExpression: t_order_$->{order_id % 2 + 1}
          # 指定t_order表的主键生成策略为SNOWFLAKE
          keyGenerator:
            type: SNOWFLAKE
            column: order_id
    # 打开sql输出日志
    props:
      sql:
        show: true
mybatis:
  configuration:
    map-underscore-to-camel-case: true
swagger:
  enable: true
logging:
  level:
    root: info
    org.springframework.web: info
    com.itheima.dbsharding: debug
    druid.sql: debug